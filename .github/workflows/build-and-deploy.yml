name: Build and Deploy

on:
  push:
    branches:
      - main

    paths:
      - '.github/workflows/build-and-deploy.yml'
      - 'Cargo**'
      - 'src/**/*.rs'

env:
  PROJECT: list-of-lists

jobs:
  build-and-package:
    runs-on: ubuntu-24.04-arm

    env:
      BUILD_TARGET: aarch64-unknown-linux-musl

    steps:
      - uses: actions/checkout@v4

      - name: Update and Configure Rust
        run: |
          sudo apt-get install -y musl-tools
          rustup target add ${{ env.BUILD_TARGET }}
          rustup update
          rustup component add clippy

      - name: Dump Toolchain Info
        run: |
          cargo --version --verbose
          rustc --version
          cargo clippy --version

      - name: Build
        run: cargo build --target ${{ env.BUILD_TARGET }}

      - name: Test
        run: cargo test --target ${{ env.BUILD_TARGET }}

      - name: Lint
        run: cargo clippy --target ${{ env.BUILD_TARGET }} -- -D warnings

      - name: Package
        run: |
          cargo build --release --target ${{ env.BUILD_TARGET }}
          cp target/${{ env.BUILD_TARGET }}/release/lambda bootstrap
          zip -j ${{ env.PROJECT }}.zip bootstrap

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: ${{ env.PROJECT }}.zip
          retention-days: 1

  deploy:
    needs: build-and-package

    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download Package
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ env.PROJECT }}.github-deploy
          role-session-name: github-deploy
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy Lambda
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_BUCKET: ${{ secrets.CODE_BUCKET }}
          FUNCTIONS: ${{ vars.FUNCTIONS }}
        run: aws s3 cp --metadata 'function.names="'${FUNCTIONS}'"' ${{ env.PROJECT }}.zip s3://${AWS_BUCKET}/
